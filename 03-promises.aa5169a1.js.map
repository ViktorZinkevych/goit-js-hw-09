{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAoCpCF,EAAKG,iBAAiB,UAjCtB,SAA6BC,G,kBAWX,IAAIC,SAAQ,SAACC,EAASC,GAEpC,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WAGNH,GACDF,EAAQ,CAAEM,SAAAC,EAAUC,MAAAC,IAEpBR,EAAO,CAAEK,SAAAC,EAAUC,MAAAC,G,GAEpBC,E,IAIJC,MAAK,SAAAC,G,IAAGN,EAAQM,EAARN,SAAUE,EAAKI,EAALJ,M,OAAYK,EAAArB,GAASsB,OAAOC,QAAQ,uBAAwCC,OAAfV,EAAS,QAAYU,OAANR,EAAM,M,IAClGS,OAAI,SAAAL,G,IAAGN,EAAQM,EAARN,SAAUE,EAAKI,EAALJ,M,OAAYK,EAAArB,GAASsB,OAAOI,QAAQ,sBAAqCF,OAAfV,EAAS,QAAYU,OAANR,EAAM,M,IACnGE,GAAQS,C,EA5BRrB,EAAEsB,iBASJ,IAPA,IAAIC,EAAaC,OAAO5B,EAAKE,cAAc,uBAAuB2B,OAC5DJ,EAAYG,OAAO3B,SAASC,cAAc,sBAAsB2B,OAChEC,EAASF,OAAO3B,SAASC,cAAc,wBAAwB2B,OAEjEb,EAAOW,EACPZ,EAAQY,EAEHI,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst form = document.querySelector('.form');\n\n\nfunction handleCreatePromise(e) {\n  e.preventDefault()\n\nlet firstDelay = Number(form.querySelector('input[name=\"delay\"]').value);\nconst stepDelay = Number(document.querySelector('input[name=\"step\"]').value);\nconst amount = Number(document.querySelector('input[name=\"amount\"]').value);\n\nlet time = firstDelay;\nlet delay = firstDelay; \n\nfor (let position = 1; position <= amount; position += 1){\n  const promise = new Promise((resolve, reject) => {\n\n    const shouldResolve = Math.random() > 0.3;\n   \n    setTimeout(() => {\n      \n      \n      if(shouldResolve) {\n        resolve({ position, delay })\n      } \n        reject({ position, delay });\n      \n    }, time);\n  });\n  \n  promise\n  .then(({ position, delay }) => Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`))\n  .catch(({ position, delay }) => Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n  time += stepDelay\n  \n}\n};;\nform.addEventListener('submit', handleCreatePromise);\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","e","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","position1","delay","delay1","time","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","stepDelay","preventDefault","firstDelay","Number","value","amount","position11","_loop"],"version":3,"file":"03-promises.aa5169a1.js.map"}